type Artist {
    id: ID!
    firstName: String!
    secondName: String!
    middleName: String
    birthDate: String
    birthPlace: String
    country: String!
    bands: [Band]
    instruments: [String]
}

input ArtistInputCreate {
    firstName: String!
    secondName: String!
    country: String!
}

input ArtistInputUpdate {
    firstName: String
    secondName: String
    middleName: String
    birthDate: String
    birthPlace: String
    country: String
    bands: [ID]
    instruments: [String]
}

type ArtistDelete {
    acknowledged: Boolean
    deletedCount: Int
}

type ArtistPagination {
  offset: Int
  limit: Int
  total: Int
  items: [Artist]
}

type Query {
    artists(arg: PaginationInput): ArtistPagination

    artist(id: ID!): Artist
}

type Mutation {
    createArtist(args: ArtistInputCreate) : Artist

    updateArtist(id: ID!, args: ArtistInputUpdate) : Artist

    deleteArtist(id: ID!) : DeleteEntity
}
