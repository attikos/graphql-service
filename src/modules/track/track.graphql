type Track {
    id: ID!
    title: String!
    bands: [Band]
    duration: Int
    released: Int
    genres: [Genre]
}

input TrackInputCreate {
    title: String
    albums: [ID]
    bands: [ID]
    duration: Int
    released: Int
    genres: [ID]
}

input TrackInputUpdate {
    title: String
    albums: [ID]
    bands: [ID]
    duration: Int
    released: Int
    genres: [ID]
}

type TrackDelete {
    acknowledged: Boolean
    deletedCount: Int
}

type TrackPagination {
  offset: Int
  limit: Int
  total: Int
  items: [Track]
}

type Query {
    tracks(input: PaginationInput): TrackPagination

    track(id: ID!): Track
}

type Mutation {
    createTrack(input: TrackInputCreate) : Track

    updateTrack(id: ID!, input: TrackInputUpdate) : Track

    deleteTrack(id: ID!) : DeleteEntity
}
