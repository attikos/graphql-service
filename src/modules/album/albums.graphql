type Album {
    _id: ID!
    name: String
    released: Int
    artistsIds: [String]
    bandsIds: [String]
    trackIds: [String]
    genresIds: [String]
    image: String
}

input AlbumInput {
    name: String
    released: Int
    artistsIds: [ID]
    bandsIds: [ID]
    trackIds: [ID]
    genresIds: [ID]
    image: String
}

input AlbumInputCreate {
    name: String
    released: Int
    artistsIds: [ID]
    bandsIds: [ID]
    trackIds: [ID]
    genresIds: [ID]
    image: String
}

type AlbumDelete {
    acknowledged: Boolean
    deletedCount: Int
}

type Query {
    albums: [Album]

    album(id: ID!): Album
}

scalar FileUpload

extend type Mutation {
    createAlbum(args: AlbumInputCreate) : Album

    updateAlbum(id: ID, args: AlbumInput) : Album

    deleteAlbum(id: ID) : AlbumDelete

    # uploadAlbumImage(id: ID, image: FileUpload!) : Album
}
